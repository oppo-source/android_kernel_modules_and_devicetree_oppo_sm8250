ifeq ($(SILEAD_FP_SUPPORT), yes)

LOCAL_PATH := $(call my-dir)

# if $(PLATFORM_SDK_VERSION) less then 23 (android6.0), need silead framework
local_build_silead_fw := $(shell \
    if [ $(PLATFORM_SDK_VERSION) -lt 23 ]; then \
        echo true; \
    else \
        echo false; \
    fi \
)

SILEAD_ANDROID_SUPPORT_VENDOR := $(shell if [ $(PLATFORM_SDK_VERSION) -ge 26 ]; then echo yes; else echo no; fi)

ifneq ($(local_build_silead_fw), true)

include $(CLEAR_VARS)
LOCAL_MODULE = libsl_fp_algo
LOCAL_MODULE_CLASS = SHARED_LIBRARIES
LOCAL_MODULE_OWNER = silead
LOCAL_MODULE_SUFFIX = .so
LOCAL_MODULE_TAGS = optional
LOCAL_MULTILIB = both
LOCAL_SRC_FILES_32 = arm/$(LOCAL_MODULE)$(LOCAL_MODULE_SUFFIX)
LOCAL_SRC_FILES_64 = arm64/$(LOCAL_MODULE)$(LOCAL_MODULE_SUFFIX)
ifeq ($(SILEAD_ANDROID_SUPPORT_VENDOR), yes)
    LOCAL_VENDOR_MODULE := true
endif
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE = libsl_fp_prepro
LOCAL_MODULE_CLASS = SHARED_LIBRARIES
LOCAL_MODULE_OWNER = silead
LOCAL_MODULE_SUFFIX = .so
LOCAL_MODULE_TAGS = optional
LOCAL_MULTILIB = both
LOCAL_SRC_FILES_32 = arm/$(LOCAL_MODULE)$(LOCAL_MODULE_SUFFIX)
LOCAL_SRC_FILES_64 = arm64/$(LOCAL_MODULE)$(LOCAL_MODULE_SUFFIX)
ifeq ($(SILEAD_ANDROID_SUPPORT_VENDOR), yes)
    LOCAL_VENDOR_MODULE := true
endif
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE = libsl_fp_nosec
LOCAL_MODULE_CLASS = SHARED_LIBRARIES
LOCAL_MODULE_OWNER = silead
LOCAL_MODULE_SUFFIX = .so
LOCAL_MODULE_TAGS = optional
LOCAL_REQUIRED_MODULES := libsl_fp_algo libsl_fp_prepro
LOCAL_MULTILIB = both
ifeq ($(SILEAD_TEST_TA), yes)
LOCAL_SRC_FILES_32 = arm/$(LOCAL_MODULE)-test$(LOCAL_MODULE_SUFFIX)
LOCAL_SRC_FILES_64 = arm64/$(LOCAL_MODULE)-test$(LOCAL_MODULE_SUFFIX)
else
LOCAL_SRC_FILES_32 = arm/$(LOCAL_MODULE)$(LOCAL_MODULE_SUFFIX)
LOCAL_SRC_FILES_64 = arm64/$(LOCAL_MODULE)$(LOCAL_MODULE_SUFFIX)
endif
ifeq ($(SILEAD_ANDROID_SUPPORT_VENDOR), yes)
    LOCAL_VENDOR_MODULE := true
endif
include $(BUILD_PREBUILT)

#include $(CLEAR_VARS)
#LOCAL_MODULE = libsl_fp_impl_util
#LOCAL_MODULE_CLASS = SHARED_LIBRARIES
#LOCAL_MODULE_OWNER = silead
#LOCAL_MODULE_SUFFIX = .so
#LOCAL_MODULE_TAGS = optional
#LOCAL_MULTILIB = both
#LOCAL_SRC_FILES_32 = arm/$(LOCAL_MODULE)$(LOCAL_MODULE_SUFFIX)
#LOCAL_SRC_FILES_64 = arm64/$(LOCAL_MODULE)$(LOCAL_MODULE_SUFFIX)
#ifeq ($(SILEAD_ANDROID_SUPPORT_VENDOR), yes)
#    LOCAL_VENDOR_MODULE := true
#endif
#include $(BUILD_PREBUILT)

ifneq ($(SILEAD_FP_HAL_SRC), yes)
include $(CLEAR_VARS)
LOCAL_MODULE = libsl_fp_impl
LOCAL_MODULE_CLASS = SHARED_LIBRARIES
LOCAL_MODULE_OWNER = silead
LOCAL_MODULE_SUFFIX = .so
LOCAL_MODULE_TAGS = optional
LOCAL_MULTILIB = both
ifeq ($(SILEAD_TEST_TA), yes)
LOCAL_SRC_FILES_32 = arm/$(LOCAL_MODULE)-$(SILEAD_FP_TEE_TYPE)-test$(LOCAL_MODULE_SUFFIX)
LOCAL_SRC_FILES_64 = arm64/$(LOCAL_MODULE)-$(SILEAD_FP_TEE_TYPE)-test$(LOCAL_MODULE_SUFFIX)
else
LOCAL_SRC_FILES_32 = arm/$(LOCAL_MODULE)-$(SILEAD_FP_TEE_TYPE)$(LOCAL_MODULE_SUFFIX)
LOCAL_SRC_FILES_64 = arm64/$(LOCAL_MODULE)-$(SILEAD_FP_TEE_TYPE)$(LOCAL_MODULE_SUFFIX)
endif
#LOCAL_REQUIRED_MODULES := libsl_fp_impl_util
ifeq ($(SILEAD_FP_TEE_TYPE), nosec)
LOCAL_REQUIRED_MODULES += libsl_fp_nosec
endif
LOCAL_STRIP_MODULE := false
ifeq ($(SILEAD_ANDROID_SUPPORT_VENDOR), yes)
    LOCAL_VENDOR_MODULE := true
endif
include $(BUILD_PREBUILT)
endif # !SILEAD_FP_HAL_SRC

endif

endif #SILEAD_FP_SUPPORT