/*
 * Copyright (C) 2013-2018, Shenzhen Huiding Technology Co., Ltd.
 * All Rights Reserved.
 * Version: V1.0
 * Description:
 * History:
 */

#ifndef _DELMARPRODUCTTESTDEFINE_H_
#define _DELMARPRODUCTTESTDEFINE_H_

#include "ProductTestDefine.h"
#include "gf_delmar_types.h"
#include "HalUtils.h"
#include "gf_delmar_product_test_types.h"
#include "DelmarProductTestFixedDefine.h"

namespace goodix
{
    typedef enum
    {
        PRODUCT_TEST_CMD_SPI = CMD_TEST_MAX + 1,  // 8
        PRODUCT_TEST_CMD_RESET_INTERRUPT_PIN,
        PRODUCT_TEST_CMD_OTP_FLASH,
        PRODUCT_TEST_CMD_PERFORMANCE_TESTING,
        PRODUCT_TEST_CMD_PERFORMANCE_TESTING_RESULT,
        PRODUCT_TEST_CMD_CANCEL,
        PRODUCT_TEST_CMD_GET_OTP_INFO,
        PRODUCT_TEST_CMD_OPEN_HBM_MODE,
        PRODUCT_TEST_CMD_CLOSE_HBM_MODE,
        PRODUCT_TEST_CMD_SET_GAIN_TARGET,
        PRODUCT_TEST_CMD_GET_GAIN_TARGET,
        PRODUCT_TEST_CMD_SET_BRIGHTNESS_LEVEL,
        PRODUCT_TEST_CMD_AGE_START,  // 20
        PRODUCT_TEST_CMD_AGE_STOP,  // 21
        PRODUCT_TEST_CMD_IMAGE_QUALITY,
        PRODUCT_TEST_CMD_GET_VERSION,
        PRODUCT_TEST_CMD_SET_SENSOR_CONFIG,
        PRODUCT_TEST_CMD_GET_SENSOR_CONFIG,
        PRODUCT_TEST_CMD_CAPTURE_IMAGE,
        PRODUCT_TEST_CMD_MORPHOTYPE, // 27
        PRODUCT_TEST_CMD_SET_SAMPLING_CFG,
        PRODUCT_TEST_CMD_GET_SAMPLING_CFG,
        PRODUCT_TEST_CMD_GET_CALI_STATE,
        PRODUCT_TEST_CMD_GET_OTP_QRCODE,
        PRODUCT_TEST_CMD_DELMAR_MAX,
    }
    DELMAR_PRODUCT_TEST_CMD_ID;

    enum
    {
        PRODUCT_TEST_TOKEN_ERROR_CODE = 6000,
        PRODUCT_TEST_TOKEN_CHIP_TYPE,
        PRODUCT_TEST_TOKEN_CHIP_SERIES,
        PRODUCT_TEST_TOKEN_MCU_CHIP_ID,
        PRODUCT_TEST_TOKEN_SENSOR_CHIP_ID,
        PRODUCT_TEST_TOKEN_FLASH_CHIP_ID,
        PRODUCT_TEST_TOKEN_RANDOM_NUM,
        PRODUCT_TEST_TOKEN_COLLECT_PHASE,
        PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_IMAGE_SENSOR_X,
        PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_IMAGE_SENSOR_Y,
        PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_IMAGE_SENSOR_WIDTH,
        PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_IMAGE_SENSOR_HEIGHT,
        PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_IMAGE_SENSOR_OFFSET,
        PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_SCREEN_WIDTH,
        PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_SCREEN_HEIGHT,
        PRODUCT_TEST_TOKEN_PERFORMANCE_TEST_CMD_ID,
        PRODUCT_TEST_TOKEN_SENSOR_INDEX,
        PRODUCT_TEST_TOKEN_RESULT_PGA_GAIN,
        PRODUCT_TEST_TOKEN_RESULT_EXPOSURE_TIME,
        PRODUCT_TEST_TOKEN_RESULT_FRAME_NUMBER,
        PRODUCT_TEST_TOKEN_RESULT_ITO_PATTERN_CODE,
        PRODUCT_TEST_TOKEN_RESULT_RUBBER_NUM,
        PRODUCT_TEST_TOKEN_RESULT_HOT_PIXEL_NUM,
        PRODUCT_TEST_TOKEN_RESULT_VALID_AREA,
        PRODUCT_TEST_TOKEN_RESULT_LOW_CORR_PITCH_LPF,
        PRODUCT_TEST_TOKEN_RESULT_EDGE_PIXEL_LEVEL1,
        PRODUCT_TEST_TOKEN_RESULT_EDGE_PIXEL_LEVEL2,
        PRODUCT_TEST_TOKEN_RESULT_MAX_LOCAL_BAD_PIXEL,
        PRODUCT_TEST_TOKEN_RESULT_MAX_TOTAL_BAD_PIXEL,
        PRODUCT_TEST_TOKEN_RESULT_FLAT_SNOISE,
        PRODUCT_TEST_TOKEN_RESULT_FLAT_SNOISE_LPF,
        PRODUCT_TEST_TOKEN_RESULT_FLAT_SNOISE_LPF_MT,
        PRODUCT_TEST_TOKEN_RESULT_CHART_DIRECTION,
        PRODUCT_TEST_TOKEN_RESULT_SIGNAL,
        PRODUCT_TEST_TOKEN_RESULT_SSNR,
        PRODUCT_TEST_TOKEN_RESULT_NOISE,
        PRODUCT_TEST_TOKEN_RESULT_SHAPENESS,
        PRODUCT_TEST_TOKEN_RESULT_SIGNAL_LPF,
        PRODUCT_TEST_TOKEN_RESULT_SSNR_LPF,
        PRODUCT_TEST_TOKEN_RESULT_NOISE_LPF,
        PRODUCT_TEST_TOKEN_RESULT_SHAPENESS_LPF,
        PRODUCT_TEST_TOKEN_RESULT_DARK_TNOISE,
        PRODUCT_TEST_TOKEN_RESULT_DARK_SNOISE,
        PRODUCT_TEST_TOKEN_RESULT_LIGHT_TNOISE,
        PRODUCT_TEST_TOKEN_RESULT_LIGHT_SNOISE,
        PRODUCT_TEST_TOKEN_RESULT_LIGHT_HIGH_MEAN,
        PRODUCT_TEST_TOKEN_CENTER_X_TO_CHIP,
        PRODUCT_TEST_TOKEN_CENTER_Y_TO_CHIP,
        PRODUCT_TEST_TOKEN_ANGLE_TO_CHIP,
        PRODUCT_TEST_TOKEN_CENTER_X_TO_SCREEN,
        PRODUCT_TEST_TOKEN_CENTER_Y_TO_SCREEN,
        PRODUCT_TEST_TOKEN_ANGLE_TO_SCREEN,
        PRODUCT_TEST_TOKEN_STATUS_BAR_HEIGHT,
        PRODUCT_TEST_TOKEN_IS_FULL_SCREEN,
        PRODUCT_TEST_TOKEN_IS_WHOLE_CIRCLE_PIC,
        PRODUCT_TEST_TOKEN_FEATURE_TYPE,
        PRODUCT_TEST_TOKEN_GAIN_TARGET,
        PRODUCT_TEST_TOKEN_BRIGHTNESS_LEVEL,
        PRODUCT_TEST_TOKEN_DISABLE_SAVE_FLAG,
        PRODUCT_TEST_TOKEN_PERFORMNCE_TEST_RESULT,
        PRODUCT_TEST_TOKEN_AGING_TEST_INTERVAL,
        PRODUCT_TEST_TOKEN_AGING_TEST_COUNT,
        PRODUCT_TEST_TOKEN_RESULT_BAD_POINT_NUM,
        PRODUCT_TEST_TOKEN_RESULT_CLUSTER_NUM,
        PRODUCT_TEST_TOKEN_RESULT_LARGEST_BAD_CLUSTER,
        PRODUCT_TEST_TOKEN_RESULT_BPN_IN_CLUSTER,
        PRODUCT_TEST_TOKEN_RESULT_LIGHT_HBAD_LINE_NUM,
        PRODUCT_TEST_TOKEN_RESULT_LIGHT_VBAD_LINE_NUM,
        PRODUCT_TEST_TOKEN_RESULT_AA_DARK_DIFF,
        PRODUCT_TEST_TOKEN_RESULT_UNOR_SIGNAL_LPF,
        PRODUCT_TEST_TOKEN_RESULT_SHARPNESS_LPF,
        PRODUCT_TEST_TOKEN_RESULT_TSNR,
        PRODUCT_TEST_TOKEN_RESULT_MAX_T_NOISE,
        PRODUCT_TEST_TOKEN_RESULT_HAF_BAD_POINT_NUM,
        PRODUCT_TEST_TOKEN_RESULT_HAF_BAD_BLOCK_NUM,
        PRODUCT_TEST_TOKEN_RESULT_BWHITE_PIXEL_NUM,
        PRODUCT_TEST_TOKEN_RESULT_BBLACK_PIXEL_NUM,
        PRODUCT_TEST_TOKEN_RESULT_LIGHT_LEAK_RATIO,
        PRODUCT_TEST_TOKEN_RESULT_DP_BAD_POINT_NUM,
        PRODUCT_TEST_TOKEN_RESULT_DP_MAX_BPN_IN_ROW,
        PRODUCT_TEST_TOKEN_RESULT_DP_MEAN_DIFF,
        PRODUCT_TEST_TOKEN_RESULT_DP_SNOISE_DARK,
        PRODUCT_TEST_TOKEN_RESULT_DP_SNOISE_LIGHT,
        PRODUCT_TEST_TOKEN_RESULT_MIN_DIFF_FLESH_HM,
        PRODUCT_TEST_TOKEN_RESULT_MIN_DIFF_FLESH_ML,
        PRODUCT_TEST_TOKEN_RESULT_MIN_DIFF_BLACK_HM,
        PRODUCT_TEST_TOKEN_RESULT_MIN_DIFF_BLACK_ML,
        PRODUCT_TEST_TOKEN_RESULT_MAX_DIFF_OFFSET,

        PRODUCT_TEST_TOKEN_IMAGE_QUALITY = FIXED_PRODUCT_TEST_TOKEN_IMAGE_QUALITY,
        PRODUCT_TEST_TOKEN_OPTICAL_TYPE = FIXED_PRODUCT_TEST_TOKEN_OPTICAL_TYPE,
        PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_CENTER_OFFSET = FIXED_PRODUCT_TEST_TOKEN_LOCATION_CIRCLE_CENTER_OFFSET,
        PRODUCT_TEST_TOKEN_ALGO_VERSION = FIXED_PRODUCT_TEST_TOKEN_ALGO_VERSION,
        PRODUCT_TEST_TOKEN_PREPROCESS_VERSION = FIXED_PRODUCT_TEST_TOKEN_PREPROCESS_VERSION,
        PRODUCT_TEST_TOKEN_PRODUCTION_ALGO_VERSION = FIXED_PRODUCT_TEST_TOKEN_PRODUCTION_ALGO_VERSION,
        PRODUCT_TEST_TOKEN_FAKE_VERSION = FIXED_PRODUCT_TEST_TOKEN_FAKE_VERSION,
        PRODUCT_TEST_TOKEN_FW_VERSION = FIXED_PRODUCT_TEST_TOKEN_FW_VERSION,
        PRODUCT_TEST_TOKEN_TEE_VERSION = FIXED_PRODUCT_TEST_TOKEN_TEE_VERSION,
        PRODUCT_TEST_TOKEN_TA_VERSION = FIXED_PRODUCT_TEST_TOKEN_TA_VERSION,
        PRODUCT_TEST_TOKEN_CHIP_ID = FIXED_PRODUCT_TEST_TOKEN_CHIP_ID,
        PRODUCT_TEST_TOKEN_VENDOR_ID = FIXED_PRODUCT_TEST_TOKEN_VENDOR_ID,
        PRODUCT_TEST_TOKEN_SENSOR_ID = FIXED_PRODUCT_TEST_TOKEN_SENSOR_ID,
        PRODUCT_TEST_TOKEN_PRODUCTION_DATE = FIXED_PRODUCT_TEST_TOKEN_PRODUCTION_DATE,
        PRODUCT_TEST_TOKEN_PGA_GAIN = FIXED_PRODUCT_TEST_TOKEN_PGA_GAIN,
        PRODUCT_TEST_TOKEN_EXPOSURE_TIME = FIXED_PRODUCT_TEST_TOKEN_EXPOSURE_TIME,
        PRODUCT_TEST_TOKEN_SENSOR_NUM = FIXED_PRODUCT_TEST_TOKEN_SENSOR_NUM,
        PRODUCT_TEST_TOKEN_MORPHOTYPE = FIXED_PRODUCT_TEST_TOKEN_MORPHOTYPE,
        PRODUCT_TEST_TOKEN_CF_MARK = FIXED_PRODUCT_TEST_TOKEN_CF_MARK,
        PRODUCT_TEST_TOKEN_CF_MASK_TYPE = FIXED_PRODUCT_TEST_TOKEN_CF_MASK_TYPE,
        PRODUCT_TEST_TOKEN_NORMAL_EXPO_TIME = FIXED_PRODUCT_TEST_TOKEN_NORMAL_EXPO_TIME,
        PRODUCT_TEST_TOKEN_LONG_EXPO_TIME = FIXED_PRODUCT_TEST_TOKEN_LONG_EXPO_TIME,
        PRODUCT_TEST_TOKEN_NORMAL_EXPO_GAIN = FIXED_PRODUCT_TEST_TOKEN_NORMAL_EXPO_GAIN,
        PRODUCT_TEST_TOKEN_LONG_EXPO_GAIN = FIXED_PRODUCT_TEST_TOKEN_LONG_EXPO_GAIN,
        PRODUCT_TEST_TOKEN_OSC_VALUE = FIXED_PRODUCT_TEST_TOKEN_OSC_VALUE,
        PRODUCT_TEST_TOKEN_RESULT_SECOND_PGA_GAIN = FIXED_PRODUCT_TEST_TOKEN_RESULT_SECOND_PGA_GAIN,
        PRODUCT_TEST_TOKEN_CALI_STATE = FIXED_PRODUCT_TEST_TOKEN_CALI_STATE,
        PRODUCT_TEST_TOKEN_PERFORMNCE_TEST_RESULT_DISPLAY = FIXED_PRODUCT_TEST_TOKEN_PERFORMNCE_TEST_RESULT_DISPLAY,
        PRODUCT_TEST_TOKEN_TEMPER_ADC_BASE = FIXED_PRODUCT_TEST_TOKEN_TEMPER_ADC_BASE,
        PRODUCT_TEST_TOKEN_DIAMOND_K = FIXED_PRODUCT_TEST_TOKEN_DIAMOND_K,
        PRODUCT_TEST_TOKEN_RESULT_UNOR_SIGNAL_LPFLOW = FIXED_PRODUCT_TEST_TOKEN_RESULT_UNOR_SIGNAL_LPFLOW,
        PRODUCT_TEST_TOKEN_RESULT_UNOR_SIGNAL_LPFHIGH = FIXED_PRODUCT_TEST_TOKEN_RESULT_UNOR_SIGNAL_LPFHIGH,
        PRODUCT_TEST_TOKEN_RESULT_TSNRLOW = FIXED_PRODUCT_TEST_TOKEN_RESULT_TSNRLOW,
        PRODUCT_TEST_TOKEN_RESULT_TSNRHIGH = FIXED_PRODUCT_TEST_TOKEN_RESULT_TSNRHIGH,
        PRODUCT_TEST_TOKEN_RESULT_POLAR_DEGREE = FIXED_PRODUCT_TEST_TOKEN_RESULT_POLAR_DEGREE,
        PRODUCT_TEST_TOKEN_CALI_MODE = FIXED_PRODUCT_TEST_TOKEN_CALI_MODE,
        PRODUCT_TEST_TOKEN_RESULT_HOT_LINE_NUM = FIXED_PRODUCT_TEST_TOKEN_RESULT_HOT_LINE_NUM,
        PRODUCT_TEST_TOKEN_RESULT_DARK_LIGHT_LEAK = FIXED_PRODUCT_TEST_TOKEN_RESULT_DARK_LIGHT_LEAK,
        PRODUCT_TEST_TOKEN_RESULT_OTP_QRCODE = PRODUCT_TEST_TOKEN_RESULT_DARK_LIGHT_LEAK + 1,
        PRODUCT_TEST_TOKEN_RESULT_CHART_GHOST_SHADOW = 6200,
        PRODUCT_TEST_TOKEN_RESULT_CHART_DIRTY = PRODUCT_TEST_TOKEN_RESULT_CHART_GHOST_SHADOW + 1,
        PRODUCT_TEST_TOKEN_RESULT_ANTIFAKE_DX = PRODUCT_TEST_TOKEN_RESULT_CHART_DIRTY + 1,
        PRODUCT_TEST_TOKEN_RESULT_ANTIFAKE_DY = PRODUCT_TEST_TOKEN_RESULT_ANTIFAKE_DX + 1,
        PRODUCT_TEST_TOKEN_SENSOR_BASE = 310000,
        PRODUCT_TEST_TOKEN_SENSOR_IDS,
        PRODUCT_TEST_TOKEN_SENSOR_X,
        PRODUCT_TEST_TOKEN_SENSOR_Y,
        PRODUCT_TEST_TOKEN_SPOT_OFFSET_X,
        PRODUCT_TEST_TOKEN_TOUCH_PRESS_X = PRODUCT_TEST_TOKEN_SPOT_OFFSET_X + 31,  //reserve 31 token for sensor coordinates
        PRODUCT_TEST_TOKEN_TOUCH_PRESS_Y,
        PRODUCT_TEST_TOKEN_LIGHT_RADIUS,
        PRODUCT_TEST_TOKEN_LIGHT_RADIUS_MM,
        PRODUCT_TEST_TOKEN_DISPLAY_CONTROL_STATE,
        PRODUCT_TEST_TOKEN_TOUCH_MAJOR,
        PRODUCT_TEST_TOKEN_TOUCH_MINOR,
        PRODUCT_TEST_TOKEN_TOUCH_ORIENTATION,
        PRODUCT_TEST_TOKEN_SENSOR_ROTATION,
    };
};  // namespace goodix

typedef struct {
    uint8_t cur_time_str[TIME_STAMP_LEN];
    uint32_t frame_num;
    uint32_t phase;
    uint32_t sensor_index;
    uint32_t feature_type;
} gf_delmar_collect_msg_data_t;

typedef struct {
    uint8_t cur_time_str[TIME_STAMP_LEN];
    uint32_t phase;
    uint32_t sensor_index;
    gf_delmar_product_test_config_t test_threshold;
    gf_delmar_new_product_test_threshold_t test_new_threshold;
    gf_delmar_calculate_cmd_t calc_cmd;
} gf_delmar_calculate_msg_data_t;

#endif /* _DELMARPRDUCTTESTDEFINE_H_ */
